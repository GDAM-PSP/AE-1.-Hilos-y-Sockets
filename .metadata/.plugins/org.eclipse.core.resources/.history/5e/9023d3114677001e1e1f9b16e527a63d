package clases;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.Socket;

public class HiloEscuchador implements Runnable{
	private Thread hilo;
	private static int numCliente = 0;
	private Socket enchufeAlCliente;
	
	public HiloEscuchador(Socket socket) {
		numCliente++;
		hilo = new Thread(this,"Cliente: "+numCliente);
		this.enchufeAlCliente = socket;
		hilo.start();
	}
	
	@Override
	public void run() {
		System.out.println("Estableciendo conexi贸n con "+hilo.getName());
		PrintStream salida = null;
		InputStreamReader entrada = null;
		BufferedReader entradaBuffer = null;
		
		
		try {
			
			//Entrada del servidor al cliente
			InputStream entrada = enchufeAlCliente.getInputStream();
			//Salida del servidor al cliente
			OutputStream salida = enchufeAlCliente.getOutputStream();
			String texto = "";
			
			//Recorremos el bucle hasta que el cliente decida salir de la aplicaci贸n
			while (!texto.trim().equals("F")) {
				byte[] mensaje = new byte[100];
				entrada.read(mensaje);
				texto = new String(mensaje);
				if (texto.trim().equals("F")) {
					salida.write("Hasta pronto, gracias por establecer conexi贸n".getBytes());
					System.out.println(hilo.getName()+" ha cerrado la comunicaci贸n");
				}
		}
			//Cerramos el socket
			enchufeAlCliente.close();
			
		} catch (IOException e) {
			System.err.println("HiloEscuchador: Error de entrada/salida");
			e.printStackTrace();
		}
	
		
		
	}

}
